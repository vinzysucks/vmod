# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "11"
          cache: gradle

      - name: Make Gradle executable
        run: chmod +x ./gradlew

      - name: Build
        run: ./gradlew clean build

      - name: Collect release JARs
        shell: bash
        run: |
          mkdir -p release
          shopt -s nullglob
          for f in build/libs/*.jar; do
            case "$f" in
              *-sources.jar|*-javadoc.jar|*dev.jar|*shadow.jar) ;;
              *) cp "$f" release/ ;;
            esac
          done
          ls -lah release

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          artifacts: "release/*.jar"
          artifactErrorsFailBuild: true
          generateReleaseNotes: true
          draft: false
          prerelease: ${{ contains(github.ref_name, '-rc') || contains(github.ref_name, '-beta') || contains(github.ref_name, '-alpha') }}
